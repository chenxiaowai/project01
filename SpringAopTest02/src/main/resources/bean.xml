<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置ServiceIOC-->
    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl"></bean>


    <!--配置logger类-->
    <bean id="logger" class="com.itheima.utils.Logger"></bean>

    <!--配置AOP-->
    <aop:config>
        <!--配置切点-->
        <aop:pointcut id="pt1" expression="execution(* com.itheima.service.impl.*.*(..))"></aop:pointcut>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">

           <!--&lt;!&ndash;配置切点 配置通知的类型，并且建立通知方法和切入点方法的关联&ndash;&gt;-->
            <!--&lt;!&ndash;前置通知&ndash;&gt;-->
            <!--<aop:before method="beforePrintLog" pointcut-ref="pt1"/>-->
            <!--&lt;!&ndash;后置通知&ndash;&gt;-->
            <!--<aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"/>-->
            <!--&lt;!&ndash;异常通知&ndash;&gt;-->
            <!--<aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"/>-->
            <!--&lt;!&ndash;最终通知&ndash;&gt;-->
            <!--<aop:after method="afterPrintLog" pointcut-ref="pt1"/>-->

            <!--配置环绕通知-->
            <aop:around method="aroundPrintLog" pointcut-ref="pt1"></aop:around>
        </aop:aspect>
    </aop:config>
</beans>


